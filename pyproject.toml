[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "the-assistant"
version = "0.1.0"
description = "POC for Temporal-based assistant"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "Assistant Developer", email = "dev@example.com"},
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "temporalio>=1.0.0",
    "python-telegram-bot>=20.0",
    "google-api-python-client>=2.0.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth>=2.0.0",
    "marko>=2.0.0",
    "PyYAML>=6.0.0",
    "python-dateutil>=2.8.0",
    "fastapi>=0.116.1",
    "uvicorn>=0.35.0",
    "python-dotenv>=1.1.1",
    "pydantic>=2.0.0",
    "asyncpg>=0.29.0",
    "cryptography>=41.0.0",
    "PyJWT>=2.8.0",
]

[project.urls]
Homepage = "https://github.com/your-username/the-assistant"
Repository = "https://github.com/your-username/the-assistant.git"
Issues = "https://github.com/your-username/the-assistant/issues"

[project.scripts]
the-assistant = "the_assistant.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/the_assistant"]

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.12.3",
    "lefthook>=1.12.2",
]

[tool.pytest.ini_options]
# Test discovery patterns for new structure
testpaths = [
    "tests/unit",
    "tests/integration",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--color=yes",
    "--durations=10",
]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, external deps)",
    "obsidian: Obsidian-specific tests",
    "slow: Slow-running tests",
    "google: Google API integration tests",
    "telegram: Telegram bot integration tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
minversion = "6.0"
norecursedirs = [
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".ruff_cache",
]

[tool.ruff]
target-version = "py313"
line-length = 88
exclude = [
    ".git",
    ".venv",
    ".env",
    "__pycache__",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "*.egg-info",
    "obsidian_vault",
    "secrets",
    "temporal-data",
    "scripts",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
